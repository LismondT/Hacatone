import "./MissionPage.css";
import { missionsService } from "../../../api/services/missionsService";
import { branchService } from "../../../api/services/branchService";
import { useState, useEffect } from "react";
import MissionCard from "../../../components/missionCard/missionCard";
import { useParams } from "react-router-dom";
import { API_BASE_URL} from "../../../api/config";

// import { useParams, Link } from "react-router-dom";

export default function MissionPage() {
    const missionId = useParams();
    const [missions, setMissions] = useState([]);
    const [branch, setBranch] = useState([]);
    const [file, setFile] = useState(null);
    const [loading, setLoading] = useState(false);

  
  useEffect(() => {
  const fetchData = async () => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∏—Å—Å–∏–∏
      const allMissions = await missionsService.getMissions();
      console.log('–í—Å–µ –º–∏—Å—Å–∏–∏:', allMissions);
      
      if (allMissions.length === 0) {
        console.log('–ù–µ—Ç –º–∏—Å—Å–∏–π');
        return;
      }
      
      const branchId = allMissions[0].branchId;
      console.log('Branch ID:', branchId);
      
      // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const [missionsData, branchData] = await Promise.all([
        missionsService.getMissionsByBranch(branchId),
        branchService.getBranchById(branchId)
      ]);
      
      console.log('–ú–∏—Å—Å–∏–∏ –ø–æ –≤–µ—Ç–∫–µ:', missionsData);
      console.log('–î–∞–Ω–Ω—ã–µ –≤–µ—Ç–∫–∏:', branchData);
      
      setMissions(missionsData.missions || missionsData);
      setBranch(branchData);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
  };

  fetchData();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!file) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª');
      return;
    }

    setLoading(true);

    try {
      const formData = new FormData();
      formData.append('file', file);
      formData.append(`${missionId}`, '123'); // –ø—Ä–∏–º–µ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

      const response = await fetch(`${API_BASE_URL}/sendMissionResult`, {
        method: 'POST',
        body: formData,
        // headers –ù–ï –Ω—É–∂–Ω—ã –¥–ª—è FormData - –±—Ä–∞—É–∑–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      });

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞');
      }

      const result = await response.json();
      console.log('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', result);
      alert('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!');
      
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setFile(null);
      e.target.reset();

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleFileChange = (e) => {
    setFile(e.target.files[0]);
  };


  return (
    <div className="missionPage-page">
      <div className="missionPage-container">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="missionPage-header">
          <h1>üöÄ –°–ø–∏—Å–æ–∫ –º–∏—Å—Å–∏–π</h1>
          <p>–í—ã–±–µ—Ä–∏—Ç–µ –º–∏—Å—Å–∏—é –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã</p>
        </div>

        {/* –í–µ—Ç–∫–∞ –º–∏—Å—Å–∏–π */}
        <div className="missionPage-branch">
          <h2>üìñ –í–µ—Ç–∫–∞: {branch.branchName}</h2>
          <ul>
            {missions.map((mission) => (
            <MissionCard
            id = {mission.id}
            title = {mission.title}
            desc = {mission.description}
            expirience = {mission.expirience}
            energy = {mission.energy}
            hasArtefactReward = {mission.hasArtefactReward}
            artefactName = {mission.artefactName}
            skills = {mission.skills}
            isOnline = {mission.isOnline}
            needRank = {mission.needRank}
            />
            ))}
          </ul>
        </div>

        {/* –ü–∞–Ω–µ–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏—Å—Å–∏–∏ */}
        <div className="missionPage-detail">
          <h2>‚öôÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏—Å—Å–∏–∏</h2>
          <form onSubmit={handleSubmit}>
            <label>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª:</label>
            <input type="file" 
              onChange={handleFileChange}
              disabled={loading}
            />
            <button type="submit" 
            className="missionPage-btn"
            disabled={loading || !file}
            >
              {loading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É'}
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}
