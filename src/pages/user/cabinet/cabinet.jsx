import "./cabinet.css";
import { useAuth } from "../../../components/context/AuthContext";
import { useState, useEffect } from "react";
import {userService} from "../../../api/services/userService";

export default function Cabinet() {
	const { user, refreshProfile } = useAuth();
  const [userData, setUserData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('week');

  useEffect(() => {
    loadUserData();
  }, []);

  const loadUserData = async () => {
    try {
      setLoading(true);
      await refreshProfile();
      const data = await userService.getCurrentUser();
      setUserData(data);
    } catch (error) {
      console.error('Error loading user data:', error);
    } finally {
      setLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ —É—Ç–∏–ª–∏—Ç—ã)
  const calculateLevelProgress = (exp) => {
    const currentLevelExp = 2000; // –ë–∞–∑–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —É—Ä–æ–≤–Ω—è
    const progress = Math.min((exp / currentLevelExp) * 100, 100);
    return {
      progress: Math.round(progress),
      current: exp,
      max: currentLevelExp
    };
  };

  const calculateEnergyProgress = (energy) => {
    const maxEnergy = 100;
    const progress = Math.min((energy / maxEnergy) * 100, 100);
    return {
      progress: Math.round(progress),
      current: energy,
      max: maxEnergy
    };
  };

  if (loading) {
    return (
      <div className="profile-page">
        <div className="stars"></div>
        <div className="loading-container">
          <div className="loading-spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Å–º–æ–Ω–∞–≤—Ç–∞...</p>
        </div>
      </div>
    );
  }
	
  const xpProgress = calculateLevelProgress(userData.exp);
  const energyProgress = calculateEnergyProgress(userData.energy);

  return (
    <div className="profile-page">
      {/* –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π —Ñ–æ–Ω */}
      <div className="stars"></div>

      <div className="profile-container">
        {/* –ü—Ä–æ—Ñ–∏–ª—å */}
        <div className="profile-card fade-in-up">
          <div className="avatar-wrapper">
            <img src={userData.image} alt="–ê–≤–∞—Ç–∞—Ä" className="avatar" />
            <div className="status"></div>
          </div>
          <h2 className="username">{userData.firstName} {userData.lastName} {userData.surname}</h2>
          <p className="rank">–†–∞–Ω–≥: ‚≠ê {userData.rankName}</p>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä—ã */}
          <div className="progress-section">
            <div className="progress-block">
              <p className="label">–û–ø—ã—Ç</p>
              <div className="progress-bar">
                <div className="progress-fill xp" style={{ width: `${xpProgress.progress}%` }}></div>
              </div>
              <p className="small">{xpProgress.current} / {xpProgress.max} XP</p>
            </div>

            <div className="progress-block">
              <p className="label">–≠–Ω–µ—Ä–≥–∏—è</p>
              <div className="progress-bar">
                <div className="progress-fill energy" style={{ width: `${energyProgress.progress}%` }}></div>
              </div>
              <p className="small">{energyProgress.current} / {energyProgress.max} ‚ö°</p>
            </div>
          </div>
        </div>

        {/* –ù–∞–≤—ã–∫–∏ */}
        <div className="skills-card fade-in-up">
          <h3 className="card-title">–ù–∞–≤—ã–∫–∏</h3>
          <div className="skills-grid">
            <div className="skill">
              <p>‚öîÔ∏è –ë–æ–π</p>
              <div className="skill-bar"><div className="fill red" style={{ width: "66%" }}></div></div>
            </div>
            <div className="skill">
              <p>üß≠ –†–∞–∑–≤–µ–¥–∫–∞</p>
              <div className="skill-bar"><div className="fill blue" style={{ width: "80%" }}></div></div>
            </div>
            <div className="skill">
              <p>üîß –ò–Ω–∂–µ–Ω–µ—Ä–∏—è</p>
              <div className="skill-bar"><div className="fill yellow" style={{ width: "50%" }}></div></div>
            </div>
            <div className="skill">
              <p>ü™ê –ù–∞–≤–∏–≥–∞—Ü–∏—è</p>
              <div className="skill-bar"><div className="fill purple" style={{ width: "75%" }}></div></div>
            </div>
          </div>
        </div>

        {/* –ë–æ—Ä—Ç–æ–≤–æ–π –∂—É—Ä–Ω–∞–ª */}
        <div className="journal-card fade-in-up">
          <h3 className="card-title">üìí –ë–æ—Ä—Ç–æ–≤–æ–π –∂—É—Ä–Ω–∞–ª</h3>
          <div className="timeline">
            <div className="timeline-item">
              <div className="dot indigo"></div>
              <p className="event">–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –º–∏—Å—Å–∏—è ¬´–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∞—Å—Ç–µ—Ä–æ–∏–¥¬ª</p>
              <p className="small">+300 XP, +1 –∞—Ä—Ç–µ—Ñ–∞–∫—Ç</p>
            </div>
            <div className="timeline-item">
              <div className="dot green"></div>
              <p className="event">–ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ¬´–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π¬ª</p>
              <p className="small">+50 —ç–Ω–µ—Ä–≥–∏–∏</p>
            </div>
            <div className="timeline-item">
              <div className="dot yellow"></div>
              <p className="event">–ü–æ–≤—ã—à–µ–Ω —Ä–∞–Ω–≥ –¥–æ ¬´–†–∞–∑–≤–µ–¥—á–∏–∫¬ª</p>
              <p className="small">–†–µ–π—Ç–∏–Ω–≥ +200</p>
            </div>
          </div>

          {/* –¢–û–ü—ã */}
          <div className="ratings">
            <h4>üèÜ –†–µ–π—Ç–∏–Ω–≥–∏</h4>
            <div className="tabs">
              <button className="active">–ù–µ–¥–µ–ª—è</button>
              <button>–ú–µ—Å—è—Ü</button>
              <button>–ì–æ–¥</button>
            </div>
            <ul className="rating-list">
              <li className="gold"><span>ü•á –ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞</span><span>3100</span></li>
              <li className="silver"><span>ü•à –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</span><span>2500</span></li>
              <li className="bronze"><span>ü•â –ê–ª–µ–∫—Å–µ–π –ö—É–∑–Ω–µ—Ü–æ–≤</span><span>2200</span></li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}
